[% PERL %]

use warnings; no warnings "redefine";

use strict;

our $is_prod = "prod" eq ($ENV{ENVIRONMENT} || "dev");
our $backend = $is_prod ? "gitlabprod" : "gitlabstaging";
our $is_docker = ! -d "/dev/mapper";
our $externally_visible_url = $is_prod ? "https://gitlab.epfl.ch/" : "https://gitlab.epfl.ch:444/";

[% END %]

[% PERL %]

# Sub-template, yow!
sub upstream_block {
    my ($block_name, $opt_port_suffix) = @_;
    $opt_port_suffix ||= "";
    my $_out = "";

    [% END %]
     upstream [% block_name %] {
           server [% backend %][% opt_port_suffix %];
     }
     [% PERL %]
     $_out;
};
[% END %]

worker_processes  5;
events {
  worker_connections  4096;  ## Default: 1024
}

http {

[% PERL %]
   $_out .= upstream_block("gitlabweb");

[% END %]

    server {
        listen 443;
        ssl on;
        ssl_certificate        /etc/ssl/gitlab.epfl.ch.crt;
        ssl_certificate_key    /etc/ssl/gitlab.epfl.ch.key;

        proxy_connect_timeout   1s;
        proxy_send_timeout   10s;

        location = /assets/50x.html {
            internal;
            root /;
        }

        location / {
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect https://gitlab.epfl.ch/ [% externally_visible_url %];

            proxy_pass http://gitlabweb;
            error_page 500 /assets/50x.html;
            error_page 501 /assets/50x.html;
            error_page 502 /assets/50x.html;
            error_page 503 /assets/50x.html;
            error_page 504 /assets/50x.html;
        }

        location /plantuml/ {
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://plantuml:8080/;
            error_page 502 /assets/502.html;
        }
    }
}

# TCP load balancing / redirect for ssh
stream {
[% PERL %]
   $_out .= upstream_block("ssh", ":22");
[% END %]

    server {
        listen 22;
        proxy_pass ssh;
    }
}
