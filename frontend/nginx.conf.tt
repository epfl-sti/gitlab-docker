[% PERL %]

use warnings; no warnings "redefine";
use strict;

our $is_prod = "prod" eq ($ENV{ENVIRONMENT} || "dev");

sub all_backend_hostnames {
  return qw(gitlabdocker_gitlab_1 gitlabdocker_gitlab_2) if $ENV{DEBUG};
  my $id = 1; my @hostnames;
  for(my $id = 1; $id <= 2; $id++) {
    my $newhostname = "gitlabdocker_gitlab_$id";
    do { push @hostnames, $newhostname }
       unless (`env - /usr/bin/ping -c 1 -W 1 $newhostname 2>&1` =~ m/unknown host/i);
  }
  return @hostnames;
}
[% END %]

[% PERL %]

# Sub-template, yow!
sub upstream_block {
    my ($block_name, $opt_port_suffix) = @_;
    $opt_port_suffix ||= "";
    my $_out = "";
[% END %]

     upstream [% block_name %] {
     [% PERL %]
     foreach my $hostname (sort(all_backend_hostnames())) {
     [% END %]
           server [% hostname %][% opt_port_suffix %];
     [% PERL %]
     }  # foreach my $hostname
     if ($opt_port_suffix) {
     [% END %]
           server 127.0.0.1[% opt_port_suffix %];
     [% PERL %]
     } else {
     [% END %]
           server 127.0.0.1 down;
     [% PERL %]
     }
     [% END %]
     }
[% PERL %]
     $_out;
};
[% END %]

worker_processes  5;
events {
  worker_connections  4096;  ## Default: 1024
}

http {

[% PERL %]
if ($is_prod) {
   $_out .= upstream_block("prod");
}

our $backend_name = $is_prod ? "prod" : "gitlabdocker_gitlab_3";
[% END %]

    server {
        listen 443;
        ssl on;
        ssl_certificate        /etc/ssl/gitlab.epfl.ch.crt;
        ssl_certificate_key    /etc/ssl/gitlab.epfl.ch.key;

        proxy_connect_timeout   1s;
        proxy_send_timeout   10s;

        location = /assets/50x.html {
            internal;
            root /;
        }

        location / {
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://[% backend_name %];
            error_page 500 /assets/50x.html;
            error_page 501 /assets/50x.html;
            error_page 502 /assets/50x.html;
            error_page 503 /assets/50x.html;
            error_page 504 /assets/50x.html;
        }

        location /plantuml {
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://gitlabdocker_plantuml_1:8080/plantuml;
            error_page 502 /assets/502.html;
        }
    }
}

# TCP load balancing / redirect for ssh
stream {
[% PERL %]
if ($is_prod) {
   $_out .= upstream_block("ssh_prod", ":22");
}
our $ssh_backend_name = $is_prod ? "ssh_prod" : "gitlabdocker_gitlab_3:22";
[% END %]

    server {
        listen 22;
        proxy_pass [% ssh_backend_name %];
    }
}
